spring.application.name=training

# server
server.port=8080
server.servlet.context-path=/training

# datasource
spring.datasource.url=jdbc:mysql://localhost:3306/training?useSSL=false&serverTimezone=Asia/Taipei&useLegacyDatetimeCode=false
spring.datasource.username=root
spring.datasource.password=abc123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# 日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL
# Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出
# monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数

status = WARN
monitorInterval = 30

# properties
LOG_HOME = C:\IDEA# ${sys:user.home}
pattern = [%d{HH:mm:ss:SSS}] [%-5p] - %l - %m%n
console_pattern = %style{%d{ISO8601}}{bright,green} %highlight{%-5p} [%style{%t}{bright,blue}] %style{%l}{bright,yellow}: %m%n%style{%throwable}{red}

# appenders
# 这个输出控制台的配置
appender.Console.type = Console
appender.Console.name = Console
appender.Console.target = SYSTEM_OUT
appender.Console.layout.type = PatternLayout
appender.Console.layout.pattern = ${console_pattern}

# 文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用
appender.log.type = File
appender.log.name = log
appender.log.fileName = ${LOG_HOME}/logs/test.log
appender.log.append = false
appender.log.layout.type = PatternLayout
appender.log.layout.pattern = ${pattern}

# 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档
appender.RollingFileInfo.type = RollingFile
appender.RollingFileInfo.name = RollingFileInfo
appender.RollingFileInfo.fileName = ${LOG_HOME}/logs/info.log
appender.RollingFileInfo.filePattern = ${LOG_HOME}/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log
appender.RollingFileInfo.filter.threshold.type = ThresholdFilter
appender.RollingFileInfo.filter.threshold.level = info
appender.RollingFileInfo.filter.threshold.onMatch = ACCEPT
appender.RollingFileInfo.filter.threshold.onMismatch = DENY
appender.RollingFileInfo.layout.type = PatternLayout
appender.RollingFileInfo.layout.pattern = ${pattern}
appender.RollingFileInfo.policies.type = Policies
appender.RollingFileInfo.policies.time.type = TimeBasedTriggeringPolicy
appender.RollingFileInfo.policies.size.type = SizeBasedTriggeringPolicy
appender.RollingFileInfo.policies.size.size = 100 MB

appender.RollingFileWarn.type = RollingFile
appender.RollingFileWarn.name = RollingFileWarn
appender.RollingFileWarn.fileName = ${LOG_HOME}/logs/warn.log
appender.RollingFileWarn.filePattern = ${LOG_HOME}/logs/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log
appender.RollingFileWarn.filter.threshold.type = ThresholdFilter
appender.RollingFileWarn.filter.threshold.level = warn
appender.RollingFileWarn.filter.threshold.onMatch = ACCEPT
appender.RollingFileWarn.filter.threshold.onMismatch = DENY
appender.RollingFileWarn.layout.type = PatternLayout
appender.RollingFileWarn.layout.pattern = ${pattern}
appender.RollingFileWarn.policies.type = Policies
appender.RollingFileWarn.policies.time.type = TimeBasedTriggeringPolicy
appender.RollingFileWarn.policies.size.type = SizeBasedTriggeringPolicy
appender.RollingFileWarn.policies.size.size = 100 MB
appender.RollingFileWarn.strategy.type = DefaultRolloverStrategy
# DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20
appender.RollingFileWarn.strategy.max = 20

appender.RollingFileError.type = RollingFile
appender.RollingFileError.name = RollingFileError
appender.RollingFileError.fileName = ${LOG_HOME}/logs/error.log
appender.RollingFileError.filePattern = ${LOG_HOME}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log
appender.RollingFileError.filter.threshold.type = ThresholdFilter
appender.RollingFileError.filter.threshold.level = error
appender.RollingFileError.filter.threshold.onMatch = ACCEPT
appender.RollingFileError.filter.threshold.onMismatch = DENY
appender.RollingFileError.layout.type = PatternLayout
appender.RollingFileError.layout.pattern = ${pattern}
appender.RollingFileError.policies.type = Policies
appender.RollingFileError.policies.time.type = TimeBasedTriggeringPolicy
appender.RollingFileError.policies.size.type = SizeBasedTriggeringPolicy
appender.RollingFileError.policies.size.size = 100 MB

# 然后定义logger，只有定义了logger并引入的appender，appender才会生效
# loggers
logger.org.springframework.name = org.springframework
logger.org.springframework.level = INFO

# 过滤掉spring一些无用的DEBUG信息
rootLogger.level = all
rootLogger.appenderRef.Console.ref = Console
rootLogger.appenderRef.log.ref = log
rootLogger.appenderRef.RollingFileInfo.ref = RollingFileInfo
rootLogger.appenderRef.RollingFileWarn.ref = RollingFileWarn
rootLogger.appenderRef.RollingFileError.ref = RollingFileError
